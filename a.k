MODULE Main 0 0
IMPORT Lib 0
ENDHDR

PROC Integer.add 4 0 0
CONST 4
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
PLUS
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.equals 4 0 0
CONST 4
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
EQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.lessThan 4 0 0
CONST 4
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
LT
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

DEFINE Integer.%desc
WORD 0
WORD 1
WORD Integer.add
WORD Integer.equals
WORD Integer.lessThan

PROC Output.Int 0 0 0
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
CONST 0
GLOBAL lib.print_num
PCALLW 1
GLOBAL lib.newline
PCALLW 0
RETURN
END

DEFINE Output.%desc
WORD 0
WORD 1
WORD Output.Int

PROC Bool.and 4 0 0
CONST 4
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
AND
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Bool.or 4 0 0
CONST 4
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
OR
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Bool.not 4 0 0
CONST 4
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
NOT
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

DEFINE Bool.%desc
WORD 0
WORD 3
WORD Bool.and
WORD Bool.or
WORD Bool.not

PROC Program.Main 0 0 0
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 5
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 5
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
DUP 0
LOADW
CONST 12
OFFSET
LOADW
CALLW 2
CONST 4
OFFSET
LOADW
CONST 0
JEQ 2
JUMP 1
LABEL 1
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 10
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
GLOBAL Output.%desc
CONST 8
OFFSET
LOADW
CALLW 1
JUMP 3
LABEL 2
LABEL 3
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 0
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
CONST 4
OFFSET
LOADW
CONST 0
JEQ 5
JUMP 4
LABEL 4
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 34
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
GLOBAL Output.%desc
CONST 8
OFFSET
LOADW
CALLW 1
JUMP 6
LABEL 5
LABEL 6
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 7
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 5
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
DUP 0
LOADW
CONST 16
OFFSET
LOADW
CALLW 2
CONST 4
OFFSET
LOADW
CONST 0
JEQ 8
JUMP 7
LABEL 7
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 25
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
GLOBAL Output.%desc
CONST 8
OFFSET
LOADW
CALLW 1
JUMP 9
LABEL 8
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 67
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
GLOBAL Output.%desc
CONST 8
OFFSET
LOADW
CALLW 1
LABEL 9
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 1
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 0
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
DUP 0
LOADW
CONST 8
OFFSET
LOADW
CALLW 2
CONST 4
OFFSET
LOADW
CONST 0
JEQ 11
JUMP 10
LABEL 10
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 45
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
GLOBAL Output.%desc
CONST 8
OFFSET
LOADW
CALLW 1
JUMP 12
LABEL 11
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 92
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
GLOBAL Output.%desc
CONST 8
OFFSET
LOADW
CALLW 1
LABEL 12
RETURN
END

DEFINE Program.%desc
WORD 0
WORD Program.%anc
WORD 1
WORD Program.Main

DEFINE Program.%anc

PROC MAIN 0 0 0
GLOBAL Program.Main
CALLW 0
RETURN
END
! End
