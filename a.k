MODULE Main 0 0
IMPORT Lib 0
ENDHDR

DEFINE Object.%desc
WORD 0
WORD 1
WORD Object.%anc
WORD Object.equals

DEFINE Object.%anc

PROC Object.equals 0 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
LOCAL 16
LOADW
EQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.add 4 0 0
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
PLUS
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.times 4 0 0
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
TIMES
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.sub 4 0 0
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
MINUS
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.div 4 0 0
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
DIV
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.mod 4 0 0
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
MOD
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.uminus 4 0 0
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
UMINUS
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.equals 4 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
EQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.notEquals 4 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
NEQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.lessThan 4 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
LT
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.greaterThan 4 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
GT
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.lessThanEq 4 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
LEQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Integer.greaterThanEq 4 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
GEQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

DEFINE Integer.%desc
WORD 0
WORD Integer.%anc
WORD 12
WORD Integer.equals
WORD Integer.add
WORD Integer.times
WORD Integer.sub
WORD Integer.div
WORD Integer.mod
WORD Integer.uminus
WORD Integer.notEquals
WORD Integer.lessThan
WORD Integer.greaterThan
WORD Integer.lessThanEq
WORD Integer.greaterThanEq

DEFINE Integer.%anc
WORD Integer.%desc
WORD Object.%desc

PROC Output.Int 0 0 0
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
CONST 0
GLOBAL lib.print_num
PCALLW 1
GLOBAL lib.newline
PCALLW 0
RETURN
END

DEFINE Output.%desc
WORD 0
WORD 1
WORD Output.Int

PROC Bool.equals 4 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
EQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Bool.and 4 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
EQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Bool.or 4 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
EQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Bool.not 4 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
NOT
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

DEFINE Bool.%desc
WORD 0
WORD Bool.%anc
WORD 4
WORD Bool.equals
WORD Bool.and
WORD Bool.or
WORD Bool.not

DEFINE Bool.%anc
WORD Bool.%desc
WORD Object.%desc

DEFINE Array.%desc
WORD 0
WORD Array.%anc
WORD 1
WORD Array.equals

DEFINE Array.%anc
WORD Array.%desc
WORD Object.%desc

PROC Array.equals 0 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
LOCAL 16
LOADW
EQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW

PROC Program.equals 0 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
EQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC Program.Main 12 0 0
CONST 12
GLOBAL AVec.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 2
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
CONST 4
OFFSET
LOADW
CONST 4
TIMES
GLOBAL Object.%desc
GLOBAL lib.new
CALLW 2
SWAP
CONST 8
OFFSET
STOREW
DUP 0
GLOBAL AVec.%desc
SWAP
STOREW
LOCAL -4
STOREW
CONST 8
GLOBAL A.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL A.%desc
SWAP
STOREW
LOCAL -8
STOREW
CONST 8
GLOBAL A.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL A.%desc
SWAP
STOREW
LOCAL -12
STOREW
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 5
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
LOCAL -8
LOADW
CONST 4
OFFSET
STOREW
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 7
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
LOCAL -12
LOADW
CONST 4
OFFSET
STOREW
LOCAL -8
LOADW
LOCAL -4
LOADW
CONST 8
OFFSET
LOADW
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 0
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
CONST 4
OFFSET
LOADW
CONST 4
TIMES
OFFSET
STOREW
LOCAL -12
LOADW
LOCAL -4
LOADW
CONST 8
OFFSET
LOADW
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 1
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
CONST 4
OFFSET
LOADW
CONST 4
TIMES
OFFSET
STOREW
LOCAL -4
LOADW
CONST 8
OFFSET
LOADW
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 0
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
CONST 4
OFFSET
LOADW
CONST 4
TIMES
OFFSET
LOADW
DUP 0
LOADW
CONST 16
OFFSET
LOADW
CALLW 1
LOCAL -4
LOADW
CONST 8
OFFSET
LOADW
CONST 8
GLOBAL Integer.%desc
GLOBAL lib.new
CALLW 2
DUP 0
CONST 1
SWAP
CONST 4
OFFSET
STOREW
DUP 0
GLOBAL Integer.%desc
SWAP
STOREW
CONST 4
OFFSET
LOADW
CONST 4
TIMES
OFFSET
LOADW
DUP 0
LOADW
CONST 16
OFFSET
LOADW
CALLW 1
RETURN
END

PROC A.equals 0 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
LOCAL 16
LOADW
CONST 4
OFFSET
LOADW
EQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW
END

PROC A.PrintX 0 0 0
LOCAL 12
LOADW
CONST 4
OFFSET
LOADW
GLOBAL Output.%desc
CONST 8
OFFSET
LOADW
CALLW 1
RETURN
END

PROC AVec.equals 0 0 0
CONST 8
GLOBAL Bool.%desc
GLOBAL lib.new
CALLW 2
DUP 0
GLOBAL Bool.%desc
SWAP
STOREW
LOCAL -4
STOREW
LOCAL 12
LOADW
LOCAL 16
LOADW
EQ
LOCAL -4
LOADW
CONST 4
OFFSET
STOREW
LOCAL -4
LOADW
RETURNW

DEFINE Program.%desc
WORD 0
WORD Program.%anc
WORD 2
WORD Program.equals
WORD Program.Main

DEFINE Program.%anc
WORD Program.%desc
WORD Object.%desc

DEFINE A.%desc
WORD 0
WORD A.%anc
WORD 2
WORD A.equals
WORD A.PrintX

DEFINE A.%anc
WORD A.%desc
WORD Object.%desc

DEFINE AVec.%desc
WORD 0
WORD AVec.%anc
WORD 1
WORD AVec.equals

DEFINE AVec.%anc
WORD AVec.%desc
WORD Array.%desc
WORD Object.%desc

PROC MAIN 0 0 0
GLOBAL Program.Main
CALLW 0
RETURN
END
! End
